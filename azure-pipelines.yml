variables:
  - name: isMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  - name: ApiDockerRepository
    value: bobby1072/poke_game_api
  - name: ReactServerDockerRepository
    value: bobby1072/poke_game_react_server
  - name: SignalRApiDockerRepository
    value: bobby1072/poke_game_signal_r_api    
  - name: ReleaseVersion
    value: $(Build.BuildNumber)     
  - name: ServiceInfo__ReleaseVersion
    value: $(Build.BuildNumber)     
  - name: releaseVersion
    value: $(Build.BuildNumber)

trigger:
  branches:
    include:
      - master

name: $(Date:yy).$(Month)$(DayOfYear).$(Rev:r)

pr:
  branches:
    include:
      - "master"
      - "feature/*"
      - "hotfix/*"
      - "bugfix/*"

pool:
  vmImage: "ubuntu-latest"


stages:
  - stage: Build
    jobs:
      - job: build_backend
        displayName: "Build web api"
        steps:
          - checkout: self
            submodules: recursive

          - task: UseDotNet@2
            displayName: "Install .NET SDK"
            inputs:
              packageType: "sdk"
              version: "9.0.x"

          - task: DotNetCoreCLI@2
            displayName: "Run .NET Unit Tests"
            inputs:
              command: "test"
              projects: "src/PokeGame.Core/PokeGame.Core.sln"
              arguments: "-c Release"

      - job: build_phaser_frontend
        displayName: "Build phaser frontend"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: 22.x

          - task: Npm@1
            displayName: "NPM install"
            inputs:
              command: "custom"
              customCommand: "ci"
              workingDir: $(Build.SourcesDirectory)/src/phaser-client

          - task: Npm@1
            displayName: "Check types"
            inputs:
              commands: "custom"
              customCommand: "run check-types"
              workingDir: $(Build.SourcesDirectory)/src/phaser-client

          - task: FileTransform@2
            displayName: "Transform react app settings"
            inputs:
              folderPath: "$(Build.SourcesDirectory)/src/phaser-client/src/common/utils"
              enableXmlTransform: false
              fileType: "json"
              jsonTargetFiles: "reactappsettings.json"

          - task: Npm@1
            displayName: "Build"
            inputs:
              command: "custom"
              customCommand: "run build"
              workingDir: $(Build.SourcesDirectory)/src/phaser-client

          - publish: "$(Build.SourcesDirectory)/src/phaser-client/dist"
            condition: eq(variables.isMain, true)
            displayName: "Publish client files"
            artifact: client

  
  - stage: Publish
    condition: and(eq(variables.isMain, true), succeeded())
    jobs:
      - job: push_api_image
        steps:
          - checkout: self
            submodules: recursive

          - task: FileTransform@2
            displayName: "Transform all configuration files"
            inputs:
              folderPath: "$(Build.SourcesDirectory)/src/PokeGame.Core"
              enableXmlTransform: false
              fileType: "json"
              jsonTargetFiles: |
                PokeGame.Core.Api/appsettings.json
                PokeGame.Core.SignalR/appsettings.json
                PokeGame.Core.React.Server/appsettings.json

          - task: Docker@2
            displayName: Login to Docker Hub
            inputs:
              command: login
              containerRegistry: DockerHub
              username: $(dockerHubUsername)
              password: $(dockerHubPassword)

          - task: Docker@2
            displayName: Build Web Image
            inputs:
              command: build
              repository: $(ApiDockerRepository)
              tags: |
                latest
                $(Build.BuildNumber)
              Dockerfile: "$(Build.SourcesDirectory)/src/PokeGame.Core/dockerfile.api"
              buildContext: "$(Build.SourcesDirectory)"

          - task: Docker@2
            displayName: Push Web Image
            inputs:
              command: push
              repository: $(ApiDockerRepository)
              tags: |
                latest
                $(Build.BuildNumber)             

          - task: DownloadPipelineArtifact@2
            displayName: "Download phaser client files"
            inputs:
              artifact: client
              path: $(Build.SourcesDirectory)/src/phaser-client/dist

          - task: Docker@2
            displayName: Build React Server Image
            inputs:
              command: build
              repository: $(ReactServerDockerRepository)
              tags: |
                latest
                $(Build.BuildNumber)
              Dockerfile: "$(Build.SourcesDirectory)/src/PokeGame.Core/dockerfile.react.server"
              buildContext: "$(Build.SourcesDirectory)"
              arguments: --build-arg WEB_APP_CLIENT_PATH=src/phaser-client/dist/          
          
          - task: Docker@2
            displayName: Push React Server Image
            inputs:
              command: push
              repository: $(ReactServerDockerRepository)
              tags: |
                latest
                $(Build.BuildNumber)

          - task: Docker@2
            displayName: Build Signal R Api Image
            inputs:
              command: build
              repository: $(SignalRApiDockerRepository)
              tags: |
                latest
                $(Build.BuildNumber)
              Dockerfile: "$(Build.SourcesDirectory)/src/PokeGame.Core/dockerfile.signalr"
              buildContext: "$(Build.SourcesDirectory)"

          - task: Docker@2
            displayName: Push Signal R Api Image
            inputs:
              command: push
              repository: $(SignalRApiDockerRepository)
              tags: |
                latest
                $(Build.BuildNumber)

